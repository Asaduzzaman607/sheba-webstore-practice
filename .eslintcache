[{"/var/www/sheba-webstore/src/index.js":"1","/var/www/sheba-webstore/src/App.js":"2","/var/www/sheba-webstore/src/reportWebVitals.js":"3","/var/www/sheba-webstore/src/Components/Homepage/Shop/Shop.js":"4","/var/www/sheba-webstore/src/Components/Homepage/Products/Products.js":"5"},{"size":547,"mtime":1610444795249,"results":"6","hashOfConfig":"7"},{"size":195,"mtime":1610428107262,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610424493466,"results":"9","hashOfConfig":"7"},{"size":4549,"mtime":1610522568357,"results":"10","hashOfConfig":"7"},{"size":1704,"mtime":1610524901377,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"bnpn3n",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/var/www/sheba-webstore/src/index.js",[],["25","26"],"/var/www/sheba-webstore/src/App.js",[],"/var/www/sheba-webstore/src/reportWebVitals.js",[],"/var/www/sheba-webstore/src/Components/Homepage/Shop/Shop.js",["27","28","29"],"import React, { useEffect, useState } from 'react';\nimport Products from '../Products/Products';\nimport './Shop.css';\n\nfunction Shop() {\n  const [data, setData] = useState({categories: [], products: []});\n  const [show, setShow] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  // for loading data\n  useEffect(() =>{  \n    fetch(\"https://api.dev-sheba.xyz/v2/partners/37732/pos/products?is_shop=1\")\n    .then(data => data.json())\n    .then(result => {\n      const newD = {products: result.products, categories: result.categories};\n      setData(newD)\n      setShow(result.products);\n      document.querySelector(\"#select-all\").checked = true;\n    })\n  }, [])\n\n\n  // for filtering products\n\n  useEffect(() =>{\n    if(selected[0] === 'all'){\n      setShow(data.products);\n      document.querySelector(\"#select-all\").checked = true;\n    }else{\n      let allShow = [];\n      selected.forEach(sel => {\n        allShow = [...allShow, ...data.products.filter(pd => pd.category_id == sel)]\n      })\n      setShow(allShow);\n    }\n  },[selected])\n\n  function handleSearch() {\n    const inputs = document.querySelectorAll('input');    \n    const ni = []\n    inputs.forEach(i =>{\n      i.checked && ni.push(i.value);\n    })\n    setSelected(ni);  \n  }\n\nfunction selectAll() {\n  const al = document.querySelector(\"#select-all\");\n  if(al.checked == true){\n    const inputs = document.querySelectorAll('input');\n    inputs.forEach(i => i.checked = false);\n    al.checked = true;\n  } else {\n    al.checked = false;\n  }\n}\n\nfunction handleReset() {\n  const inputs = document.querySelectorAll('input');\n  inputs.forEach(i =>{\n    i.checked = false;\n  })\n  setSelected([\"all\"]);\n}\n\nfunction handleShort(e) {\n  const newShow = [...show];\n  if(e.target.id === \"pLowToHigh\"){\n    newShow.sort((a, b) => a.original_price - b.original_price);\n  }\n  else if(e.target.id === \"pHighToLow\"){\n    newShow.sort((a, b) => b.original_price - a.original_price);\n  }\n  else if(e.target.id === \"dLowToHigh\"){\n    newShow.sort((a, b) => a.original_price - b.original_price);\n  }\n  else if(e.target.id === \"dHighToLow\"){\n    newShow.sort((a, b) => b.original_price - a.original_price);\n  }\n  setShow(newShow);\n}\n\n  return (\n    <div className='container'>\n      <button onClick={() => setToggle(!toggle)} className=\"shortBtn\">Short</button>\n      <div style={{visibility: toggle ? \"visible\" : \"hidden\"}} className=\"shortOption\">\n        \n        <input onClick={(e) => handleShort(e)} name=\"short\" id=\"pLowToHigh\" type=\"radio\"/>\n        <label htmlFor=\"pLowToHigh\">Price - Low to High</label>\n\n        <input onClick={(e) => handleShort(e)} name=\"short\" id=\"pHighToLow\" type=\"radio\"/>\n        <label htmlFor=\"pHighToLow\">Price - High to Low</label>\n\n        <input onClick={(e) => handleShort(e)} name=\"short\" id=\"dLowToHigh\" type=\"radio\"/>\n        <label htmlFor=\"dLowToHigh\">Discount - Low to High</label>\n\n        <input onClick={(e) => handleShort(e)} name=\"short\" id=\"dHighToLow\" type=\"radio\"/>\n        <label htmlFor=\"dHighToLow\">Discount - High to Low</label>        \n      </div>\n     <div className=\"row\">\n         <div className=\"col-md-3\">\n         <div className=\"filter-container\">\n         <ul style={{listStyle: \"none\"}} >\n             <div className=\"d-flex justify-content-between filtering-reset-option\">\n                 <h3>Filtering</h3>\n                 <button onClick={handleReset} className=\"reset-btn\">Reset</button>\n\n             </div>\n        <li >            \n            <label>\n            <input onClick={selectAll} type=\"checkbox\" className='checkmarks' name=\"all\" id=\"select-all\"/>\n              All\n            </label>\n        </li>\n        {\n          data.categories.map(cate => \n          <li key={cate.id}>            \n              <input className='checkmarks' type=\"checkbox\" value={cate.id} id={cate.id}/>\n              <label className='category-name' htmlFor={cate.id} onClick={() => document.querySelector(\"#select-all\").checked = false}>\n              {cate.name}\n              </label>\n          </li>)\n        }\n      </ul>\n      <div>\n      <button onClick={handleSearch} className='search-btn'>Search</button>\n      </div>\n         </div>\n         </div>\n         <div className=\"col-md-8 mr-3\">\n            <div className=\"row\">\n                \n                {\n                    show.map(data => <Products key={data.id} data={data}></Products>)\n                }\n                \n      </div>\n      </div>\n     </div>\n     \n    </div>\n  );\n}\n\nexport default Shop;\n","/var/www/sheba-webstore/src/Components/Homepage/Products/Products.js",["30","31","32"],"import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport './Products.css';\n\nconst Products = (props) => {\n\n    const {name, image_gallery, original_price, discounted_amount} = props.data\n    const imgUrl = image_gallery[0]?.image_link || \"https://s3.ap-south-1.amazonaws.com/cdn-shebadev/images/pos/services/thumbs/default.jpg\";\n    console.log(imgUrl)\n    return (\n        <div className=\"col-md-4 col-sm-6\">\n            {/* <div className=\"card-container\">\n                <img className='card-img' src={imgUrl} alt=\"\"/>\n                <h4 className='product-title'>{name}</h4>\n                <div className=\"d-flex price-add-container\">\n                    <div>\n                    <h4 id=\"price\">{original_price}</h4>\n                    <h4 className=' discount-container'>{original_price-discounted_amount}</h4>\n                    </div>\n                    <button className=\"addBtn\">Add</button>\n                </div>\n            </div> */}\n            <div class=\"product-card\">\n  <img className=\"card-img\" src={imgUrl} alt=\"Card image cap\"/>\n  <div className=\"card-body\">\n      <div className=\"product-title\">\n      <h5 className=\"product-title\">{name.slice(0,63)}</h5>\n      </div>\n    \n    <div className=\"d-flex price-add-container justify-content-between\">\n                    <div className='price-disc-container'>\n                    <h4>৳ {original_price}</h4>\n                    {/* <h4 className=' discount-container'>৳ {original_price-discounted_amount}</h4> */}\n                    </div>\n                    <button className=\"addBtn\">+ Add -</button>\n                </div>\n  </div>\n</div>\n\n            \n        </div>\n    );\n};\n\nexport default Products;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":33,"column":77,"nodeType":"39","messageId":"40","endLine":33,"endColumn":79},{"ruleId":"41","severity":1,"message":"42","line":37,"column":5,"nodeType":"43","endLine":37,"endColumn":15,"suggestions":"44"},{"ruleId":"37","severity":1,"message":"38","line":50,"column":17,"nodeType":"39","messageId":"40","endLine":50,"endColumn":19},{"ruleId":"45","severity":1,"message":"46","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":7,"column":49,"nodeType":"47","messageId":"48","endLine":7,"endColumn":66},{"ruleId":"50","severity":1,"message":"51","line":24,"column":3,"nodeType":"52","endLine":24,"endColumn":64},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.products'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setShow' needs the current value of 'data.products'.","ArrayExpression",["55"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'discounted_amount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [data.products, selected]",{"range":"58","text":"59"},[1090,1100],"[data.products, selected]"]